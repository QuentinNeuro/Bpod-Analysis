function concatData = AP_Concat_Sessions(thisData,concatData,session)
%  AP_CONCAT_SESSIONS concatenates single-session output from 
%  AP_ANALYZE_PEAKS. Function first checks how many sessions have been
%  analyzed using the input 'session.' If only 1 session has been analyzed,
%  the single session data 'thisData' is returned. Otherwise, all outputs
%  of AP_ANALYZE_PEAKS and AP_FIND_PEAKS are vertically concatenated, such
%  that every row of the outputs (e.g., plocs, normproms) represents a
%  single trial.
%  thisData:      structure containing matrix of trialized, reward-aligned
%                 photometry data and all calculated peak data for
%                 single session.
%  concatData:    concatenated data of all single-session thisData
%                 structures.
%  session:       session number from group of sessions.

if session > 1
    structArr                =[thisData,concatData];
    numPeaks                 =[size(structArr(1).ptimes,2),             ...
                               size(structArr(2).ptimes,2)];
    [maxPeaks,maxIdx]        =max(numPeaks);
    maxStruct                =structArr(maxIdx);
    [minPeaks,minIdx]        =min(numPeaks);
    minStruct                =structArr(minIdx);
    nanPad                   =nan(size(minStruct.ptimes,1),             ...
                                 (maxPeaks-minPeaks));
    minStruct.plocs          =[minStruct.plocs,nanPad];
    minStruct.ptimes         =[minStruct.ptimes,nanPad];
    minStruct.pproms         =[minStruct.pproms,nanPad];
    minStruct.pheights       =[minStruct.pheights,nanPad];
    minStruct.mlocs          =[minStruct.mlocs,nanPad];
    minStruct.mtimes         =[minStruct.mtimes,nanPad];
    minStruct.pmins          =[minStruct.pmins,nanPad];
    minStruct.normproms      =[minStruct.normproms,nanPad];
    minStruct.normpheights   =[minStruct.normpheights,nanPad];
    structArr(maxIdx)        =maxStruct;
    structArr(minIdx)        =minStruct;
    thisDataCell             =struct2cell(structArr(1));
    concatDataCell           =struct2cell(structArr(2));
    fieldNames               =fieldnames(structArr(2));
    fieldNamesVertCat        ={'Time','DFF','plocs','ptimes','pproms',  ...
                               'pheights','mlocs','mtimes','pmins',     ...
                               'normproms','normpheights',}';
    fieldIdxsVertCat         =find(ismember(fieldNames,fieldNamesVertCat));
    fieldNamesHorzCat        ={'Baseline','CueAVG','CueMAX',            ...
                               'OutcomeAVG','OutcomeMAX','Z4Cue',       ...
                               'Z4Outcome','CueAVGZ','CueMAXZ',         ...
                               'OutcomeAVGZ','OutcomeMAXZ','CueStat',   ...
                               'OutcomeStat','Bleach'}';
    fieldIdxsHorzCat         =find(ismember(fieldNames,fieldNamesHorzCat));
    fieldNamesStructCat      ={'firstPtime','firstPprom','firstJitter'};
    fieldIdxsStructCat       =find(ismember(fieldNames,fieldNamesStructCat));
    vertCatData              =cell2struct(cellfun(@vertcat,             ...
                                          concatDataCell(fieldIdxsVertCat), ...
                                          thisDataCell(fieldIdxsVertCat),   ...
                                          'uni',0),                     ...
                                          fieldNamesVertCat,1);
% % %     horzCatData              =cell2struct(cellfun(@horzcat,             ...
% % %                                           concatDataCell(fieldIdxsHorzCat), ...
% % %                                           thisDataCell(fieldIdxsHorzCat),   ...
% % %                                           'uni',0),                     ...
% % %                                           fieldNamesHorzCat,1);
    horzCatData              =cell2struct(thisDataCell(fieldIdxsHorzCat),   ...                     ...
                                          fieldNamesHorzCat,1);
    mergeStructs             =@(x,y) cell2struct([struct2cell(x);       ...
                                                  struct2cell(y)],      ...
                                                 [fieldnames(x);        ...
                                                  fieldnames(y)]);      ...
    concatData               =mergeStructs(vertCatData,horzCatData);
    for idx                  =1:length(fieldIdxsStructCat)
    structData               =cell2struct(cellfun(@vertcat,             ...
                                          struct2cell(concatDataCell{   ...
                                          fieldIdxsStructCat(idx)}),    ...
                                          struct2cell(thisDataCell{     ...
                                          fieldIdxsStructCat(idx)}),    ...
                                          'uni',0),                     ...
                                          fieldnames(thisDataCell{      ...
                                          fieldIdxsStructCat(idx)}));
    fieldName                =fieldNamesStructCat(idx);
    concatData.(fieldName{:})=structData;
    end
    concatData.Name          =structArr(2).Name;
    concatData               =orderfields(concatData,thisData);
else
concatData =thisData;
end
