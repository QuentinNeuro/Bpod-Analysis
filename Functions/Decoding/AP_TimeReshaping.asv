% function [timeTW,DataTW]=AP_TimeReshaping(data,tw,timeToZero,sampRate)
% 
% %% Initialize expected arrays
% ExpectedSize=diff(tw)*sampRate+1;
% DataTW=NaN(1,ExpectedSize);
% timeTW=tw(1):1/sampRate:tw(2);
% 
% if ~isempty(data)
% %% Create Time Array Matching Data
% dataSize=length(data);
% time=(1/sampRate:1/sampRate:(1/sampRate*dataSize))-timeToZero;
% Index0=find(~timeTW);
% %% Reshape the data
% DataBegin=data(time>=tw(1) & time<=0);
% DataEnd=data(time>=0 & time<=tw(2));
% if (Index0-length(DataBegin))==0
%     IndexBegin=[1 Index0];
%     IndexEnd=[Index0 Index0+length(DataEnd)-1];
% else
%     IndexBegin=[Index0-length(DataBegin) Index0-1];
%     IndexEnd=[Index0 Index0+length(DataEnd)-1];
% end    
% DataTW(IndexBegin(1):IndexBegin(2))=DataBegin;
% DataTW(IndexEnd(1):IndexEnd(2))=DataEnd;
% 
% % DataNew(Index0-length(DataBegin):Index0-1)=DataBegin;
% % DataNew(Index0:Index0+length(DataEnd)-1)=DataEnd;
% 
% if length(DataTW)>length(timeTW)
%     DataTW=DataTW(1:length(timeTW));
% end
% end
% end

function [timeTWexp,dataTW]=AP_TimeReshaping(data,tw,timeToZero,sampRate)
%% Parameters
% Time window
dt=1/sampRate;
expectedSizeTW=diff(tw)*sampRate;
time=[0:1:length(data)-1] * dt; 
timeZ=time-timeToZero;
timeTWexp=linspace(tw(1),tw(2),expectedSizeTW);

%% timeWindow
% Finding the time window index
timeZ_IO=false(size(timeZ));
timeTW_IO=false(size(timeTWexp));
timeZ_IO(timeZ>=tw(1) & timeZ<=tw(2))=true;
timeZinTW=timeZ(timeZ_IO);
timeTW_IO(timeTWexp>=timeZinTW(1) & timeTWexp<=timeZinTW(end))=true;

dataTW=data(timeZ_IO);
timeTW=timeZ(timeZ_IO);
% padding
k=find(timeTW_IO);
padStart=k(1)-1;
padStop=length(timeTW_IO)-k(end);

dataTW=[nan(1,padStart) dataTW nan(1,padStop)];

switch length(dataTW)-length(timeTWexp)
    case 1
        dataTW=dataTW(1:end-1);
        diffTW=1
    case 2
        dataTW=dataTW(2:end-1);
        diffTW=2;
end

end