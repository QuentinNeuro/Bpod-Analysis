function Events=A_makeTrialEvents_CuedOutcome(Analysis)
%% makeTrialEvents for VIP project
% uses data contained in the 'Analysis' structure generated by Analysis_Photometry function
%

%% Trial Starting Time
Events.TrialStartRel=zeros(1,Analysis.AllData.nTrials);
Events.TrialStartTimestamp=Analysis.AllData.Time.TrialStartTS;

%% States Time
Cue=NaN(1,Analysis.AllData.nTrials);
Outcome=NaN(1,Analysis.AllData.nTrials);
for i=1:Analysis.AllData.nTrials
    Cue(i)=Analysis.AllData.Time.States{1,i}.SoundDelivery(1);
    Outcome(i)=Analysis.AllData.Time.States{1,i}.Outcome(1);
    Events.Licks{i}=Analysis.AllData.Licks.Events{1,i}+Analysis.AllData.Time.Zero(i);
end

%% Behavior specific filters
Filters4Outcome={'AnticipLick_CueA_Reward','NoAnticipLick_CueA_Reward',...
                 'Uncued_Reward'};
for i=1:length(Filters4Outcome)
    thisTS=Outcome;
	thisFilter=Filters4Outcome{i};
    counter=1;
    foundit=0;
   while counter<=length(Analysis.Filters.Names) && foundit==0
        if strcmp(Analysis.Filters.Names{counter},thisFilter)
            thisLogical=~Analysis.Filters.Logicals(:,counter);
            thisTS(thisLogical)=NaN;
            Events.(thisFilter)=thisTS;
            foundit=1;
        end
        counter=counter+1;
   end
   if foundit==0
       disp([thisFilter ' has not been found']);
   end
end

Filters4Cue={'Cue_A','Cue_B','NoCue',...
             'AnticipLick_CueA','NoAnticipLick_CueA'};
for i=1:length(Filters4Cue)
    thisTS=Cue;
	thisFilter=Filters4Cue{i};
    counter=1;
    foundit=0;
   while counter<=length(Analysis.Filters.Names) && foundit==0
        if strcmp(Analysis.Filters.Names{counter},thisFilter)
            thisLogical=~Analysis.Filters.Logicals(:,counter);
            thisTS(thisLogical)=NaN;
            Events.(thisFilter)=thisTS;
            foundit=1;
        end
        counter=counter+1;
   end
   if foundit==0
       disp([thisFilter ' has not been found']);
   end
end
