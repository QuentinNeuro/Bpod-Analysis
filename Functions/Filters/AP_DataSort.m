function Analysis=AP_DataSort(Analysis,FilterName,thisFilter)
%AP_Data sorts the data generated by AP_DataProcess based on the filter
%specified in 'FilterName'.
%
%function designed by Quentin 2016 for Analysis_Photometry

%% Parameters
FilterName=strrep(FilterName,' ','_');
thistype=FilterName;
ignoredTrialFilter=Analysis.Filters.ignoredTrials';
% recovery of filter if not specified
if nargin==2 || isempty(thisFilter)==1
    if isfield(Analysis.Filters,thistype)
thisFilter=Analysis.Filters.(thistype);
    else
        disp(['Unable to sort data based on filter ' thistype]);
        return
    end
end
% Check whether data have already been filtered using the specified filter
if isfield(Analysis,thistype)
    disp(['Data for ' thistype ' have already been computed']);
    return
end
thisFilter=logical(thisFilter.*ignoredTrialFilter);
%% Extract Data
    Analysis.(thistype).Name                        =strrep(FilterName,'_',' ');
    Analysis.(thistype).nTrials                     =nnz(thisFilter);
    Analysis.(thistype).IgnoredTrials               =Analysis.AllData.nTrials-Analysis.(thistype).nTrials;
if Analysis.(thistype).nTrials>0
    Analysis=AP_DataSort_FieldMatch(Analysis,FilterName,thisFilter);
    
% Timing for average    
    CueTime=Analysis.(thistype).Time.Cue(1,:)+Analysis.Parameters.CueTimeReset;
    OutcomeTime=Analysis.(thistype).Time.Outcome(1,:)+Analysis.Parameters.OutcomeTimeReset;
% Licks
    thisEvents=Analysis.(thistype).Licks.Events;
    for i=1:length(thisEvents)
        thisTrials{1,i}=i*ones(length(thisEvents{1,i}),1)';
    end
    Analysis.(thistype).Licks.Events=cell2mat(thisEvents);
    Analysis.(thistype).Licks.Trials=cell2mat(thisTrials);
% Average
    Analysis.(thistype).Licks.AVG                       =mean(Analysis.(thistype).Licks.Rate,1);
    Analysis.(thistype).Licks.SEM                       =std(Analysis.(thistype).Licks.Rate,0,1)/sqrt(Analysis.(thistype).nTrials);
    Analysis.(thistype).Licks.Bin                       =Analysis.Parameters.ReshapedTime(1)+Analysis.Parameters.Bin:Analysis.Parameters.Bin:Analysis.Parameters.ReshapedTime(2);
    Analysis.(thistype).Licks.CueAVG                    =mean(Analysis.(thistype).Licks.Cue);
    Analysis.(thistype).Licks.OutcomeAVG                =mean(Analysis.(thistype).Licks.Outcome);
% Photometry    
    for thisCh=1:length(Analysis.Parameters.PhotoCh)
        thisChStruct=sprintf('Photo_%s',char(Analysis.Parameters.PhotoCh{thisCh}));
        Time=Analysis.(thistype).(thisChStruct).Time(1,:);
    % Average
        Analysis.(thistype).(thisChStruct).DFFAVG       =nanmean(Analysis.(thistype).(thisChStruct).DFF,1); 
        Analysis.(thistype).(thisChStruct).DFFSEM       =nanstd(Analysis.(thistype).(thisChStruct).DFF,0,1)/sqrt(Analysis.(thistype).nTrials);
        %Analysis.(thistype).(thisChStruct).DFFAVG_CueZ   =nanmean(Analysis.(thistype).(thisChStruct).DFF-Analysis.(thistype).(thisChStruct).Z4Cue',1); 
        %Analysis.(thistype).(thisChStruct).DFFAVG_OutZ   =nanmean(Analysis.(thistype).(thisChStruct).DFF-Analysis.(thistype).(thisChStruct).Z4Outcome',1); 

        % Cue
        Analysis.(thistype).(thisChStruct).CueAVG_AVG   =nanmean(Analysis.(thistype).(thisChStruct).CueAVG,2);
        Analysis.(thistype).(thisChStruct).CueAVGZ_AVG  =nanmean(Analysis.(thistype).(thisChStruct).CueAVGZ,2);
        Analysis.(thistype).(thisChStruct).CueAVG_SEM   =nanstd(Analysis.(thistype).(thisChStruct).CueAVG,0,2)/sqrt(Analysis.(thistype).nTrials);
        Analysis.(thistype).(thisChStruct).CueAVG_MAX   =max(Analysis.(thistype).(thisChStruct).DFFAVG(Time>CueTime(1) & Time<CueTime(2)));
        Analysis.(thistype).(thisChStruct).CueAVG_MAXZ  =Analysis.(thistype).(thisChStruct).CueAVG_MAX-nanmean(Analysis.(thistype).(thisChStruct).DFFAVG(Time>CueTime(1)-0.2 & Time<CueTime(1)-0.01)); 
        Analysis.(thistype).(thisChStruct).CueMAX_AVG   =nanmean(Analysis.(thistype).(thisChStruct).CueMAX,2);
        Analysis.(thistype).(thisChStruct).CueMAXZ_AVG  =nanmean(Analysis.(thistype).(thisChStruct).CueMAXZ,2);
        Analysis.(thistype).(thisChStruct).CueMAX_SEM   =nanstd(Analysis.(thistype).(thisChStruct).CueMAX,0,2)/sqrt(Analysis.(thistype).nTrials);     
        % Outcome
        Analysis.(thistype).(thisChStruct).OutcomeAVG_AVG   =nanmean(Analysis.(thistype).(thisChStruct).OutcomeAVG,2);
        Analysis.(thistype).(thisChStruct).OutcomeAVG_SEM   =nanstd(Analysis.(thistype).(thisChStruct).OutcomeAVG,0,2)/sqrt(Analysis.(thistype).nTrials);
        Analysis.(thistype).(thisChStruct).OutcomeAVG_MAX   =max(Analysis.(thistype).(thisChStruct).DFFAVG(Time>OutcomeTime(1) & Time<OutcomeTime(2))); 
        Analysis.(thistype).(thisChStruct).OutcomeAVG_MAXZ  =Analysis.(thistype).(thisChStruct).OutcomeAVG_MAX-nanmean(Analysis.(thistype).(thisChStruct).DFFAVG(Time>OutcomeTime(1)-0.2 & Time<OutcomeTime(1)-0.01)); 
        Analysis.(thistype).(thisChStruct).OutcomeAVGZ_AVG  =nanmean(Analysis.(thistype).(thisChStruct).OutcomeAVGZ,2);
        Analysis.(thistype).(thisChStruct).OutcomeAVGZ_SEM  =nanstd(Analysis.(thistype).(thisChStruct).OutcomeAVGZ,0,2)/sqrt(Analysis.(thistype).nTrials);
        Analysis.(thistype).(thisChStruct).OutcomeMAXZ_AVG  =nanmean(Analysis.(thistype).(thisChStruct).OutcomeMAXZ,2);
        Analysis.(thistype).(thisChStruct).OutcomeMAXZ_SEM  =nanstd(Analysis.(thistype).(thisChStruct).OutcomeMAXZ,0,2)/sqrt(Analysis.(thistype).nTrials);
    % Fit
         model=fitlm(Analysis.(thistype).(thisChStruct).OutcomeStat,Analysis.(thistype).(thisChStruct).CueStat);
%        Analysis.(thistype).(thisChStruct).Fit.XData=Analysis.(thistype).(thisChStruct).OutcomeStat;
         Analysis.(thistype).(thisChStruct).Fit.YFit=model.Fitted;
         Analysis.(thistype).(thisChStruct).Fit.Function=model.Coefficients.Estimate;
         Analysis.(thistype).(thisChStruct).Fit.Rsquared=model.Rsquared.Ordinary;
         Analysis.(thistype).(thisChStruct).Fit.Pvalue=model.Coefficients.pValue(2); 
	% Cumulatives
         Analysis.(thistype).(thisChStruct).Cumul.Prob=(1:Analysis.(thistype).nTrials)/Analysis.(thistype).nTrials; 
         Analysis.(thistype).(thisChStruct).Cumul.CueSort=sort(Analysis.(thistype).(thisChStruct).CueStat);
         Analysis.(thistype).(thisChStruct).Cumul.OutcomeSort=sort(Analysis.(thistype).(thisChStruct).OutcomeStat);       
    end
%% Wheel
    if Analysis.Parameters.Wheel
        Analysis.(thistype).Wheel.DistanceAVG            =nanmean(Analysis.(thistype).Wheel.Distance,1); 
        Analysis.(thistype).Wheel.DistanceSEM            =nanstd(Analysis.(thistype).Wheel.Distance,0,1)/sqrt(Analysis.(thistype).nTrials);
    end
%% Pupillometry
    if Analysis.Parameters.Pupillometry
        Analysis.(thistype).Pupil.PupilAVG          =nanmean(Analysis.(thistype).Pupil.PupilDPP,1); 
        Analysis.(thistype).Pupil.PupilSEM          =nanstd(Analysis.(thistype).Pupil.PupilDPP,0,1)/sqrt(Analysis.(thistype).nTrials);
    end
    
 %% Spikes
    if Analysis.Parameters.SpikesAnalysis
        Analysis=Analysis_Spikes(Analysis,'Sort',thistype,thisFilter);
    end
end
end